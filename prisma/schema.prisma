// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           String      @id @default(uuid())
  full_name    String
  email        String
  password     String
  cpf          String      @unique()
  phone_area   String
  phone_number String
  end          End?
  profile      Profile?
  Charges      Charges[]
  Permissons   Permissons?
}

model End {
  id          String @id @default(uuid())
  street      String
  locality    String
  home_number String
  city        String
  state       String
  region_code String
  postal_code String
  fk_user_id  String @unique
  user        User   @relation(fields: [fk_user_id], references: [id])
}

model Profile {
  id         String  @id @default(uuid())
  avatar     String?
  fk_user_id String  @unique
  user       User    @relation(fields: [fk_user_id], references: [id])
}

model User_tokens {
  id         String   @id @default(uuid())
  token      String   @unique @default(uuid())
  user_id    String?
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
}

model Charges {
  id             String   @id @default(uuid())
  reference_id   String
  status         String
  charge_id      String
  amount         Int
  payment_method String
  fk_user_id     String
  created_at     DateTime @default(now())
  sumary         Sumary?
  user           User     @relation(fields: [fk_user_id], references: [id])
}

model Sumary {
  id           String  @id @default(uuid())
  total        Int
  paid         Int
  fk_charge_id String  @unique
  charge       Charges @relation(fields: [fk_charge_id], references: [id])
}

model WebHooks {
  id         String   @id @default(uuid())
  message    Json
  created_at DateTime @default(now())
}

model Permissons {
  id            String  @id @default(uuid())
  termos        Boolean @default(false)
  notifications Boolean @default(false)
  userId        String  @unique
  user          User    @relation(fields: [userId], references: [id])
}
